{
    "scope": "source.python",

    "completions":
    [

    // key words
    {"trigger": "and\tkeyword", "contents": "and"},
    {"trigger": "as\tkeyword", "contents": "as"},
    {"trigger": "assert\tkeyword", "contents": "assert"},
    {"trigger": "break\tkeyword", "contents": "break"},
    {"trigger": "continue\tkeyword", "contents": "continue"},
    {"trigger": "del\tkeyword", "contents": "del"},
    {"trigger": "except\tkeyword", "contents": "except"},
    {"trigger": "exec\tkeyword", "contents": "exec"},
    {"trigger": "False\tkeyword", "contents": "False"},
    {"trigger": "finally\tkeyword", "contents": "finally"},
    {"trigger": "for\tkeyword", "contents": "for"},
    {"trigger": "in\tkeyword", "contents": "in"},
    {"trigger": "is\tkeyword", "contents": "is"},
    {"trigger": "None\tkeyword", "contents": "None"},
    {"trigger": "not\tkeyword", "contents": "not"},
    {"trigger": "or\tkeyword", "contents": "or"},
    {"trigger": "pass\tkeyword", "contents": "pass"},
    {"trigger": "print\tkeyword", "contents": "print"},
    {"trigger": "raise\tkeyword", "contents": "raise"},
    {"trigger": "return\tkeyword", "contents": "return"},
    {"trigger": "True\tkeyword", "contents": "True"},
    {"trigger": "try\tkeyword", "contents": "try"},
    {"trigger": "while\tkeyword", "contents": "while"},
    {"trigger": "with\tkeyword", "contents": "with"},
    {"trigger": "yield\tkeyword", "contents": "yield"},
    {"trigger": "python\tkeyword", "contents": "python"},

    // Errors and Exceptions
    {"trigger": "ArithmeticError\terror", "contents": "ArithmeticError(${1:\"${2: error}\"})"},
    {"trigger": "AssertionError\terror", "contents": "AssertionError(${1:\"${2: error}\"})"},
    {"trigger": "AttributeError\terror", "contents": "AttributeError(${1:\"${2: error}\"})"},
    {"trigger": "BaseException\texception", "contents": "BaseException(${1:\"${2: error}\"})"},
    {"trigger": "BufferError\terror", "contents": "BufferError(${1:\"${2: error}\"})"},
    {"trigger": "BytesWarning\twarning", "contents": "BytesWarning(${1:\"${2: error}\"})"},
    {"trigger": "DeprecationWarning\twarning", "contents": "DeprecationWarning(${1:\"${2: error}\"})"},
    {"trigger": "EnvironmentError\terror", "contents": "EnvironmentError(${1:\"${2: error}\"})"},
    {"trigger": "EOFError\terror", "contents": "EOFError(${1:\"${2: error}\"})"},
    {"trigger": "Exception\texception", "contents": "Exception(${1:\"${2: error}\"})"},
    {"trigger": "FloatingPointError\terror", "contents": "FloatingPointError(${1:\"${2: error}\"})"},
    {"trigger": "FutureWarning\twarning", "contents": "FutureWarning(${1:\"${2: error}\"})"},
    {"trigger": "GeneratorExit\texit", "contents": "GeneratorExit(${1:\"${2: error}\"})"},
    {"trigger": "ImportError\terror", "contents": "ImportError(${1:\"${2: error}\"})"},
    {"trigger": "ImportWarning\twarning", "contents": "ImportWarning(${1:\"${2: error}\"})"},
    {"trigger": "IndentationError\terror", "contents": "IndentationError(${1:\"${2: error}\"})"},
    {"trigger": "IndexError\terror", "contents": "IndexError(${1:\"${2: error}\"})"},
    {"trigger": "IOError\terror", "contents": "IOError(${1:\"${2: error}\"})"},
    {"trigger": "KeyboardInterrupt\t", "contents": "KeyboardInterrupt(${1:\"${2: error}\"})"},
    {"trigger": "KeyError\terror", "contents": "KeyError(${1:\"${2: error}\"})"},
    {"trigger": "LookupError\terror", "contents": "LookupError(${1:\"${2: error}\"})"},
    {"trigger": "MemoryError\terror", "contents": "MemoryError(${1:\"${2: error}\"})"},
    {"trigger": "NameError\terror", "contents": "NameError(${1:\"${2: error}\"})"},
    {"trigger": "NotImplemented\t", "contents": "NotImplemented(${1:\"${2: error}\"})"},
    {"trigger": "NotImplementedError\terror", "contents": "NotImplementedError(${1:\"${2: error}\"})"},
    {"trigger": "OSError\terror", "contents": "OSError(${1:\"${2: error}\"})"},
    {"trigger": "OverflowError\terror", "contents": "OverflowError(${1:\"${2: error}\"})"},
    {"trigger": "PendingDeprecationWarning\twarning", "contents": "PendingDeprecationWarning(${1:\"${2: error}\"})"},
    {"trigger": "ReferenceError\terror", "contents": "ReferenceError(${1:\"${2: error}\"})"},
    {"trigger": "RuntimeError\terror", "contents": "RuntimeError(${1:\"${2: error}\"})"},
    {"trigger": "RuntimeWarning\twarning", "contents": "RuntimeWarning(${1:\"${2: error}\"})"},
    {"trigger": "StandardError\terror", "contents": "StandardError(${1:\"${2: error}\"})"},
    {"trigger": "StopIteration\tstop", "contents": "StopIteration(${1:\"${2: error}\"})"},
    {"trigger": "SyntaxError\terror", "contents": "SyntaxError(${1:\"${2: error}\"})"},
    {"trigger": "SyntaxWarning\twarning", "contents": "SyntaxWarning(${1:\"${2: error}\"})"},
    {"trigger": "SystemError\terror", "contents": "SystemError(${1:\"${2: error}\"})"},
    {"trigger": "SystemExit\texit", "contents": "SystemExit(${1:\"${2: error}\"})"},
    {"trigger": "TabError\terror", "contents": "TabError(${1:\"${2: error}\"})"},
    {"trigger": "TypeError\terror", "contents": "TypeError(${1:\"${2: error}\"})"},
    {"trigger": "UnboundLocalError\terror", "contents": "UnboundLocalError(${1:\"${2: error}\"})"},
    {"trigger": "UnicodeDecodeError\terror", "contents": "UnicodeDecodeError(${1:\"${2: error}\"})"},
    {"trigger": "UnicodeEncodeError\terror", "contents": "UnicodeEncodeError(${1:\"${2: error}\"})"},
    {"trigger": "UnicodeTranslateError\terror", "contents": "UnicodeTranslateError(${1:\"${2: error}\"})"},
    {"trigger": "UnicodeWarning\twarning", "contents": "UnicodeWarning(${1:\"${2: error}\"})"},
    {"trigger": "UserWarning\twarning", "contents": "UserWarning(${1:\"${2: error}\"})"},
    {"trigger": "ValueError\terror", "contents": "ValueError(${1:\"${2: error}\"})"},
    {"trigger": "VMSError\terror", "contents": "VMSError(${1:\"${2: error}\"})"},
    {"trigger": "WindowsError\terror", "contents": "WindowsError(${1:\"${2: error}\"})"},
    {"trigger": "ZeroDivision\terror", "contents": "ZeroDivision(${1:\"${2: error}\"})"},

    // built-in functions with constant arg list
    {"trigger":"else\telse", "contents": "else:\n\t${1:pass}\n$0"},
    {"trigger":"elif\telif", "contents": "elif ${1:cond}:\n\t${2:pass}\n$0"},
    {"trigger":"abs\tabs(number)", "contents": "abs(${1:x})"},
    {"trigger":"all\tall", "contents": "all(${1:iterable})"},
    {"trigger":"any\tany", "contents": "any(${1:iterable})"},
    {"trigger":"basestring\tbasestring", "contents": "basestring()"},
    {"trigger":"bin\tbin", "contents": "bin(${1:x})"},
    {"trigger":"bool\tbool", "contents": "bool(${1:x})"},
    {"trigger":"callable\tcallable", "contents": "callable(${1:object})"},
    {"trigger":"chr\tchr", "contents": "chr(${1:i})"},
    {"trigger":"classmethod\tclassmethod", "contents": "classmethod(${1:function})"},
    {"trigger":"cmp\tcmp", "contents": "cmp(${1:x}, ${2:y})"},
    {"trigger":"delattr\tdelattr", "contents": "delattr(${1:object}, ${2:name})"},
    {"trigger":"dict\tdict", "contents": "dict(**kwarg)"},
    {"trigger":"dir\tdir", "contents": "dir(${1:object})"},
    {"trigger":"divmod\tdivmod", "contents": "divmod(${1:a}, ${2:b})"},
    {"trigger":"enumerate\tenumerate", "contents": "enumerate(${1:sequence}, start=0)"},
    {"trigger":"filter\tfilter", "contents": "filter(${1:function}, ${2:iterable})"},
    {"trigger":"float\tfloat", "contents": "float(${1:x})"},
    {"trigger":"frozenset\tfrozenset", "contents": "frozenset(${1:iterable})"},
    {"trigger":"globals\tglobals", "contents": "globals()"},
    {"trigger":"hasattr\thasattr", "contents": "hasattr(${1:object}, ${2:name})"},
    {"trigger":"hash\thash", "contents": "hash(${1:object})"},
    {"trigger":"help\thelp", "contents": "help(${1:object})"},
    {"trigger":"hex\thex", "contents": "hex(${1:x})"},
    {"trigger":"id\tid", "contents": "id(${1:object})"},
    {"trigger":"input\tinput", "contents": "input(${1:prompt})"},
    {"trigger":"int\tint", "contents": "int(${1:x=0})"},
    {"trigger":"isinstance\tisinstance", "contents": "isinstance(${1:object}, ${2:classinfo})"},
    {"trigger":"issubclass\tissubclass", "contents": "issubclass(${1:class}, ${2:classinfo})"},
    {"trigger":"len\tlen", "contents": "len(${1:s})"},
    {"trigger":"list\tlist", "contents": "list(${1:iterable})"},
    {"trigger":"locals\tlocals", "contents": "locals()"},
    {"trigger":"long\tlong", "contents": "long(${1:x})"},
    {"trigger":"map\tmap", "contents": "map(${1:function}, ${2:iterable}, ...)"},
    {"trigger":"memoryview\tmemoryview", "contents": "memoryview(${1:obj})"},
    {"trigger":"object\tobject", "contents": "object()"},
    {"trigger":"oct\toct", "contents": "oct(${1:x})"},
    {"trigger":"ord\tord", "contents": "ord(${1:c})"},
    {"trigger":"print\tprint", "contents": "print(*objects, sep=' ', end='\\n', file=sys.stdout)"},
    {"trigger":"range\trange", "contents": "range(${1:stop})"},
    {"trigger":"raw_input\traw_input", "contents": "raw_input(${1:prompt})"},
    {"trigger":"reload\treload", "contents": "reload(${1:module})"},
    {"trigger":"repr\trepr", "contents": "repr(${1:object})"},
    {"trigger":"reversed\treversed", "contents": "reversed(${1:seq})"},
    {"trigger":"set\tset", "contents": "set(${1:iterable})"},
    {"trigger":"setattr\tsetattr", "contents": "setattr(${1:object}, ${2:name}, ${3:value})"},
    {"trigger":"slice\tslice", "contents": "slice(${1:start}${2:, ${3:stop}}${4:, ${5:step}})"},
    {"trigger":"staticmethod\tstaticmethod", "contents": "staticmethod(${1:function})"},
    {"trigger":"str\tstr", "contents": "str(${1:object=''})"},
    {"trigger":"tuple\ttuple", "contents": "tuple(${1:iterable})"},
    {"trigger":"type\ttype", "contents": "type(${1:object})"},
    {"trigger":"unichr\tunichr", "contents": "unichr(${1:i})"},
    {"trigger":"unicode\tunicode", "contents": "unicode(object='')"},
    {"trigger":"vars\tvars", "contents": "vars(${1:object})"},
    {"trigger":"zip\tzip", "contents": "zip(${1:iterable})"},
    {"trigger":"compile\tcompile", "contents": "compile(${1:source}, ${2:filename}, ${3:mode}, ${4:flags, ${5:dont_inherit}})"},
    {"trigger":"xrange\txrange", "contents": "xrange(${1:start}${2:, ${3:stop}}${4:, ${5:step}})"},

        // Variable length args
    {"trigger":"bytearray\tbytearray", "contents": "bytearray(${1:source${2:, ${3:encoding}${4:, ${5:errors}}}})"},
    {"trigger":"complex\tcomplex", "contents": "complex(${1:real}${2:, ${3:imag}})"},
    {"trigger":"eval\teval", "contents": "eval(${1:expression}${2:, ${3:globals}${4:, ${5:locals}}})"},
    {"trigger":"execfile\texecfile", "contents": "execfile(${1:filename}${2:, ${3:globals}${4:, ${5:locals}}})"},
    {"trigger":"file\tfile", "contents": "file(${1:name}${2:, ${3:mode}${4:, ${5:buffering}}})"},
    {"trigger":"format\tformat", "contents": "format(${1:value}${2:, ${3:format_spec}})"},
    {"trigger":"getattr\tgetattr", "contents": "getattr(${1:object}, ${2: name}${3:, ${4:default}})"},
    {"trigger":"iter\titer", "contents": "iter(${1:o}${2:, ${3:sentinel}})"},
    {"trigger":"max\tmax", "contents": "max(${1:iterable}${2:, ${3:key}})"},
    {"trigger":"min\tmin", "contents": "min(${1:iterable}${2:, ${3:key}})"},
    {"trigger":"next\tnext", "contents": "next(${1:iterator}${2:, ${3:default}})"},
    {"trigger":"open\topen", "contents": "open(${1:name}${2:, ${3:mode}${4:, ${5:buffering}}})"},
    {"trigger":"pow\tpow", "contents": "pow(${1:x}, ${2: y${3:, ${4:z}}})"},
    {"trigger":"property\tproperty", "contents": "property(${1:fget}${2:, ${3:fset}${4:, ${5:fdel}${6:, ${7:doc}}}})"},
    {"trigger":"reduce\treduce", "contents": "reduce(${1:function}, ${2:iterable}${3:, ${4:initializer}})"},
    {"trigger":"round\tround", "contents": "round(${1:number}${2:, ${3:ndigits}})"},
    {"trigger":"sorted\tsorted", "contents": "sorted(${1:iterable}${2:, ${3:key}${4:, ${5:reverse}${6:, ${7:cmp}}}})"},
    {"trigger":"sum\tsum", "contents": "sum(${1:iterable}${2:, ${3:start}})"},
    {"trigger":"super\tsuper", "contents": "super(${1:type}${2:, ${3:object-or-type}})"},
    {"trigger":"__import__\t__import__", "contents": "__import__(${1:name}${2:, ${3:globals}${4:, ${5:locals}${6:, ${7:fromlist}${8:, ${9:level}}}}})"},

    // magic methods
    {"trigger": "__abs__\tmagic", "contents": "__abs__"},
    {"trigger": "__add__\tmagic", "contents": "__add__"},
    {"trigger": "__and__\tmagic", "contents": "__and__"},
    {"trigger": "__bases__\tmagic", "contents": "__bases__"},
    {"trigger": "__call__\tmagic", "contents": "__call__"},
    {"trigger": "__class__\tmagic", "contents": "__class__"},
    {"trigger": "__cmp__\tmagic", "contents": "__cmp__"},
    {"trigger": "__coerce__\tmagic", "contents": "__coerce__"},
    {"trigger": "__complex__\tmagic", "contents": "__complex__"},
    {"trigger": "__contains__\tmagic", "contents": "__contains__"},
    {"trigger": "__del__\tmagic", "contents": "__del__"},
    {"trigger": "__delattr__\tmagic", "contents": "__delattr__"},
    {"trigger": "__delete__\tmagic", "contents": "__delete__"},
    {"trigger": "__delitem__\tmagic", "contents": "__delitem__"},
    {"trigger": "__delslice__\tmagic", "contents": "__delslice__"},
    {"trigger": "__dict__\tmagic", "contents": "__dict__"},
    {"trigger": "__div__\tmagic", "contents": "__div__"},
    {"trigger": "__divmod__\tmagic", "contents": "__divmod__"},
    {"trigger": "__doc__\tmagic", "contents": "__doc__"},
    {"trigger": "__enter__\tmagic", "contents": "__enter__"},
    {"trigger": "__eq__\tmagic", "contents": "__eq__"},
    {"trigger": "__exit__\tmagic", "contents": "__exit__"},
    {"trigger": "__file__\tmagic", "contents": "__file__"},
    {"trigger": "__float__\tmagic", "contents": "__float__"},
    {"trigger": "__floordiv__\tmagic", "contents": "__floordiv__"},
    {"trigger": "__func__\tmagic", "contents": "__func__"},
    {"trigger": "__future__\tmagic", "contents": "__future__"},
    {"trigger": "__ge__\tmagic", "contents": "__ge__"},
    {"trigger": "__get__\tmagic", "contents": "__get__"},
    {"trigger": "__getattr__\tmagic", "contents": "__getattr__"},
    {"trigger": "__getattribute__\tmagic", "contents": "__getattribute__"},
    {"trigger": "__getitem__\tmagic", "contents": "__getitem__"},
    {"trigger": "__getslice__\tmagic", "contents": "__getslice__"},
    {"trigger": "__gt__\tmagic", "contents": "__gt__"},
    {"trigger": "__hash__\tmagic", "contents": "__hash__"},
    {"trigger": "__hex__\tmagic", "contents": "__hex__"},
    {"trigger": "__iadd__\tmagic", "contents": "__iadd__"},
    {"trigger": "__iand__\tmagic", "contents": "__iand__"},
    {"trigger": "__idiv__\tmagic", "contents": "__idiv__"},
    {"trigger": "__ifloordiv__\tmagic", "contents": "__ifloordiv__"},
    {"trigger": "__ilshift__\tmagic", "contents": "__ilshift__"},
    {"trigger": "__imod__\tmagic", "contents": "__imod__"},
    {"trigger": "__imul__\tmagic", "contents": "__imul__"},
    {"trigger": "__index__\tmagic", "contents": "__index__"},
    {"trigger": "__init__\tmagic", "contents": "__init__"},
    {"trigger": "__instancecheck__\tmagic", "contents": "__instancecheck__"},
    {"trigger": "__int__\tmagic", "contents": "__int__"},
    {"trigger": "__invert__\tmagic", "contents": "__invert__"},
    {"trigger": "__iop__\tmagic", "contents": "__iop__"},
    {"trigger": "__ior__\tmagic", "contents": "__ior__"},
    {"trigger": "__ipow__\tmagic", "contents": "__ipow__"},
    {"trigger": "__irshift__\tmagic", "contents": "__irshift__"},
    {"trigger": "__isub__\tmagic", "contents": "__isub__"},
    {"trigger": "__iter__\tmagic", "contents": "__iter__"},
    {"trigger": "__itruediv__\tmagic", "contents": "__itruediv__"},
    {"trigger": "__ixor__\tmagic", "contents": "__ixor__"},
    {"trigger": "__le__\tmagic", "contents": "__le__"},
    {"trigger": "__len__\tmagic", "contents": "__len__"},
    {"trigger": "__long__\tmagic", "contents": "__long__"},
    {"trigger": "__lshift__\tmagic", "contents": "__lshift__"},
    {"trigger": "__lt__\tmagic", "contents": "__lt__"},
    {"trigger": "__metaclass__\tmagic", "contents": "__metaclass__"},
    {"trigger": "__mod__\tmagic", "contents": "__mod__"},
    {"trigger": "__module__\tmagic", "contents": "__module__"},
    {"trigger": "__mro__\tmagic", "contents": "__mro__"},
    {"trigger": "__mul__\tmagic", "contents": "__mul__"},
    {"trigger": "__name__\tmagic", "contents": "__name__"},
    {"trigger": "__ne__\tmagic", "contents": "__ne__"},
    {"trigger": "__neg__\tmagic", "contents": "__neg__"},
    {"trigger": "__new__\tmagic", "contents": "__new__"},
    {"trigger": "__nonzero__\tmagic", "contents": "__nonzero__"},
    {"trigger": "__oct__\tmagic", "contents": "__oct__"},
    {"trigger": "__op__\tmagic", "contents": "__op__"},
    {"trigger": "__or__\tmagic", "contents": "__or__"},
    {"trigger": "__pos__\tmagic", "contents": "__pos__"},
    {"trigger": "__pow__\tmagic", "contents": "__pow__"},
    {"trigger": "__radd__\tmagic", "contents": "__radd__"},
    {"trigger": "__rand__\tmagic", "contents": "__rand__"},
    {"trigger": "__rcmp__\tmagic", "contents": "__rcmp__"},
    {"trigger": "__rdiv__\tmagic", "contents": "__rdiv__"},
    {"trigger": "__rdivmod__\tmagic", "contents": "__rdivmod__"},
    {"trigger": "__repr__\tmagic", "contents": "__repr__"},
    {"trigger": "__reversed__\tmagic", "contents": "__reversed__"},
    {"trigger": "__rfloordiv__\tmagic", "contents": "__rfloordiv__"},
    {"trigger": "__rlshift__\tmagic", "contents": "__rlshift__"},
    {"trigger": "__rmod__\tmagic", "contents": "__rmod__"},
    {"trigger": "__rmul__\tmagic", "contents": "__rmul__"},
    {"trigger": "__rop__\tmagic", "contents": "__rop__"},
    {"trigger": "__ror__\tmagic", "contents": "__ror__"},
    {"trigger": "__rpow__\tmagic", "contents": "__rpow__"},
    {"trigger": "__rrshift__\tmagic", "contents": "__rrshift__"},
    {"trigger": "__rshift__\tmagic", "contents": "__rshift__"},
    {"trigger": "__rsub__\tmagic", "contents": "__rsub__"},
    {"trigger": "__rtruediv__\tmagic", "contents": "__rtruediv__"},
    {"trigger": "__rxor__\tmagic", "contents": "__rxor__"},
    {"trigger": "__self__\tmagic", "contents": "__self__"},
    {"trigger": "__set__\tmagic", "contents": "__set__"},
    {"trigger": "__setattr__\tmagic", "contents": "__setattr__"},
    {"trigger": "__setitem__\tmagic", "contents": "__setitem__"},
    {"trigger": "__setslice__\tmagic", "contents": "__setslice__"},
    {"trigger": "__slots__\tmagic", "contents": "__slots__"},
    {"trigger": "__str__\tmagic", "contents": "__str__"},
    {"trigger": "__sub__\tmagic", "contents": "__sub__"},
    {"trigger": "__subclasscheck__\tmagic", "contents": "__subclasscheck__"},
    {"trigger": "__truediv__\tmagic", "contents": "__truediv__"},
    {"trigger": "__unicode__\tmagic", "contents": "__unicode__"},
    {"trigger": "__weakref__\tmagic", "contents": "__weakref__"},
    {"trigger": "__xor__\tmagic", "contents": "__xor__"},

    // Standard Library modules (2.7.3 and 3.x)
    "2to3", "__builtin__", "__future__", "__main__", "_dummy_thread", "_thread", "_winreg",
    "abc", "aepack", "aetools", "aetypes", "aifc", "al", "AL", "anydbm", "argparse", "array",
    "ascii", "ast", "asynchat", "asyncore", "atexit", "audioop", "autoGIL", "base64", "BaseHTTPServer",
    "Bastion", "bdb", "binascii", "binhex", "bisect", "bsddb", "builtins", "bz2", "calendar",
    "cd", "cgi", "CGIHTTPServer", "cgitb", "chunk", "client", "cmath", "cmd", "code", "codecs",
    "codeop", "collections", "ColorPicker", "colorsys", "commands", "compileall", "config",
    "ConfigParser", "configparser", "contextlib", "Cookie", "cookiejar", "cookielib", "cookies",
    "copy", "copy_reg", "copyreg", "cPickle", "crypt", "cStringIO", "csv", "ctypes", "curses",
    "datetime", "dbhash", "dbm", "decimal", "DEVICE", "difflib", "dircache", "dis", "distutils",
    "dl", "doctest", "DocXMLRPCServer", "dom", "dumbdbm", "dummy_thread", "dummy_threading",
    "EasyDialogs", "ElementTree", "email", "entities", "errno", "error", "expat", "faulthandler",
    "fcntl", "filecmp", "fileinput", "findertools", "fl", "FL", "flp", "fm", "fnmatch", "formatter",
    "fpectl", "fpformat", "fractions", "FrameWork", "ftplib", "functools", "futures", "gc", "gdbm",
    "gensuitemodule", "getopt", "getpass", "gettext", "gl", "GL", "glob", "grp", "gzip", "handler",
    "handlers", "hashlib", "heapq", "hmac", "hotshot", "html", "htmlentitydefs", "htmllib", "HTMLParser",
    "http", "httplib", "ic", "imageop", "imaplib", "imgfile", "imghdr", "imp", "importlib", "imputil",
    "inspect", "io", "ipaddress", "itertools", "jpeg", "json", "keyword", "linecache", "locale",
    "logging", "lzma", "MacOS", "macostools", "macpath", "mailbox", "mailcap", "marshal", "math",
    "md5", "mhlib", "mimetools", "mimetypes", "MimeWriter", "mimify", "MiniAEFrame", "minidom", "mmap",
    "mock", "modulefinder", "msilib", "msvcrt", "multifile", "multiprocessing", "mutex", "netrc",
    "new", "nis", "nntplib", "numbers", "operator", "optparse", "os", "ossaudiodev", "panel",
    "parse", "parser", "path", "pdb", "pickle", "pickletools", "pipes", "pkgutil", "platform", "plistlib",
    "popen2", "poplib", "posix", "posixfile", "pprint", "pty", "pulldom", "pwd", "py_compile", "pyclbr",
    "pydoc", "Queue", "queue", "quopri", "random", "re", "readline", "repr", "reprlib", "request",
    "resource", "response", "rexec", "rfc822", "rlcompleter", "robotparser", "runpy", "sax", "saxutils",
    "sched", "ScrolledText", "scrolledtext", "select", "server", "sets", "sgmllib", "sha", "shelve",
    "shlex", "shutil", "signal", "SimpleHTTPServer", "SimpleXMLRPCServer", "site", "smtpd", "smtplib",
    "sndhdr", "socket", "SocketServer", "socketserver", "spwd", "sqlite3", "ssl", "stat", "statvfs",
    "string", "StringIO", "stringprep", "struct", "subprocess", "sunau", "support", "symbol", "symtable",
    "sys", "sysconfig", "syslog", "tabnanny", "tarfile", "telnetlib", "tempfile", "termios", "test",
    "test_support", "textpad", "textwrap", "thread", "threading", "time", "timeit", "Tix", "tix",
    "Tkinter", "tkinter", "token", "tokenize", "trace", "traceback", "ttk", "tty", "turtle", "types",
    "unicodedata", "unittest", "urllib", "urllib2", "urlparse", "user", "UserDict", "UserList", "UserString",
    "uu", "uuid", "venv", "warnings", "wave", "weakref", "webbrowser", "whichdb", "winreg", "winsound",
    "wsgiref", "xdrlib", "xmlreader", "xmlrpc", "xmlrpclib", "zipfile", "zipimport", "zlib"
    ]
}
